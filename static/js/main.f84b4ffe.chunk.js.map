{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/item-status-filter/item-status-filter.js","components/item-status-filter/index.js","components/seach-bar/index.js","components/seach-bar/search-bar.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/add-item-form/index.js","components/add-item-form/add-item-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","todo","done","subscription","className","filterButtons","name","label","ItemStatusFilter","filter","onFilterChange","buttons","map","classes","onClick","key","type","SearchBar","onSearchChange","placeholder","onChange","e","target","value","TodoListItem","text","important","toggleDone","toggleImportant","deleteItem","classNames","icon","faTrash","faExclamation","TodoList","todos","elements","id","itemProps","AddItemForm","state","handleTextChange","setState","handleSubmit","preventDefault","props","addItem","onSubmit","this","faPlus","Component","App","currentID","createTodoItem","term","newItem","deleteID","toggleID","t","importantID","handleSearchChange","handleFilterChange","filterItems","items","item","storageTodos","window","localStorage","getItem","JSON","parse","prevProps","prevState","snapshot","setItem","stringify","filterType","doneCount","length","todoCount","visibleItems","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f84b4ffe.chunk.js","sourcesContent":["import AppHeader from './app-header'\n\nexport default AppHeader\n","import React from 'react'\nimport './app-header.css'\n\nconst AppHeader = ({ todo, done }) => {\n  const subscription = <span>{todo} more to do, {done} done</span>\n  return (\n    <div className='header-container mx-2 mt-2'>\n      <h1>Todo List</h1>\n      {subscription}\n    </div>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\n\nconst filterButtons = [\n  { name: 'all', label: 'All' },\n  { name: 'active', label: 'Active' },\n  { name: 'done', label: 'Done' }\n]\n\nconst ItemStatusFilter = ({ filter, onFilterChange = () => {} }) => {\n  const buttons = filterButtons.map(({ name, label }) => {\n    const classes = `btn btn-outline-primary${name === filter ? ' active' : ''}`\n    return (\n      <button\n        className={classes}\n        onClick={() => onFilterChange(name)}\n        key={name}\n        type='button'\n      >{label}\n      </button>\n    )\n  })\n  return (\n    <div className='btn-group my-2 mr-2'>\n      {buttons}\n    </div>\n  )\n}\n\nexport default ItemStatusFilter\n","import ItemStatusFilter from './item-status-filter'\n\nexport default ItemStatusFilter\n","import SearchBar from './search-bar'\n\nexport default SearchBar\n","import React from 'react'\n\nconst SearchBar = ({ onSearchChange }) => {\n  return (\n    <div className='input-group'>\n      <input\n        type='text'\n        className='form-control search-input m-2'\n        placeholder='Type to search'\n        onChange={(e) => onSearchChange(e.target.value)}\n      />\n    </div>\n  )\n}\n\nexport default SearchBar\n","import TodoListItem from './todo-list-item'\n\nexport default TodoListItem\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash, faExclamation } from '@fortawesome/free-solid-svg-icons'\nimport './todo-list-item.css'\n\nconst TodoListItem = ({ text, done, important, toggleDone, toggleImportant, deleteItem }) => {\n  const classNames = `todo-list-item${important ? ' important' : ''}${done ? ' done' : ''}`\n\n  return (\n    <div className={classNames}>\n      <span\n        className='todo-text text-truncate'\n        onClick={toggleDone}\n      >{text}\n      </span>\n      <span className='d-flex'>\n        <button\n          onClick={deleteItem}\n          type='button'\n          className='btn btn-outline-danger'\n        >\n          <FontAwesomeIcon icon={faTrash} />\n        </button>\n        <button\n          onClick={toggleImportant}\n          type='button'\n          className='btn btn-outline-info'\n        >\n          <FontAwesomeIcon icon={faExclamation} />\n        </button>\n      </span>\n    </div>\n  )\n}\n\nexport default TodoListItem\n","import TodoList from './todo-list'\n\nexport default TodoList\n","import React from 'react'\nimport TodoListItem from '../todo-list-item'\nimport './todo-list.css'\n\nconst TodoList = ({ todos, toggleDone, toggleImportant, deleteItem }) => {\n  const elements = todos.map(({ id, ...itemProps }) => {\n    return (\n      <li key={id} className='list-group-item'>\n        <TodoListItem\n          {...itemProps}\n          toggleDone={() => toggleDone(id)}\n          toggleImportant={() => toggleImportant(id)}\n          deleteItem={() => deleteItem(id)}\n        />\n      </li>\n    )\n  })\n\n  return (\n    <ul className='list-group todo-list m-2'>\n      {elements}\n    </ul>\n  )\n}\n\nexport default TodoList\n","import AddItemForm from './add-item-form'\n\nexport default AddItemForm\n","import React, { Component } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\n\nexport default class AddItemForm extends Component {\n  state = {\n    text: ''\n  }\n\n  handleTextChange = e => {\n    this.setState({\n      text: e.target.value\n    })\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    if (this.state.text === '') return\n    this.props.addItem(this.state.text)\n    this.setState({\n      text: ''\n    })\n  }\n\n  render () {\n    return (\n      <form\n        className='add-item-container d-flex align-items-center'\n        onSubmit={this.handleSubmit}\n      >\n        <button className='btn btn-outline-info mx-2'>\n          <FontAwesomeIcon icon={faPlus} />\n        </button>\n        <input\n          value={this.state.text}\n          className='form-control search-input mr-2'\n          placeholder='Add what you need to be done'\n          type='text'\n          onChange={this.handleTextChange}\n        />\n      </form>\n    )\n  }\n}\n","import App from './app'\n\nexport default App\n","import React, { Component } from 'react'\nimport AppHeader from '../app-header'\nimport ItemStatusFilter from '../item-status-filter'\nimport SearchBar from '../seach-bar'\nimport TodoList from '../todo-list'\nimport AddItemForm from '../add-item-form'\nimport './app.css'\n\nexport default class App extends Component {\n  constructor (props) {\n    super(props)\n    const storageTodos = window.localStorage.getItem('todos')\n    this.state = {\n      todos: storageTodos === null\n        ? [\n          this.createTodoItem('Yet another todo app'),\n          this.createTodoItem('Click or tap on todo to mark it done'),\n          this.createTodoItem('Remove todo by click on trash icon')\n        ] : JSON.parse(storageTodos),\n      term: '',\n      filter: 'all'\n    }\n  }\n\n  componentDidUpdate (prevProps, prevState, snapshot) {\n    window.localStorage.setItem('todos', JSON.stringify(this.state.todos))\n  }\n\n  currentID = 0\n\n  createTodoItem (text) {\n    this.currentID += 1\n    return ({\n      text,\n      id: this.currentID,\n      done: false,\n      important: false\n    })\n  }\n\n  state = {\n    todos: [\n      this.createTodoItem('First'),\n      this.createTodoItem('Second'),\n      this.createTodoItem('Third')\n    ],\n    term: '',\n    filter: 'all'\n  }\n\n  addItem = text => {\n    const newItem = this.createTodoItem(text)\n    this.setState(({ todos }) => {\n      return ({\n        todos: [...todos, newItem]\n      })\n    })\n  }\n\n  deleteItem = deleteID =>\n    this.setState(({ todos }) => ({\n      todos: todos.filter(({ id }) => id !== deleteID)\n    }))\n\n  toggleDone = toggleID =>\n    this.setState(({ todos }) => ({\n      todos: todos.map(t => t.id === toggleID ? { ...t, done: !t.done } : t)\n    }))\n\n  toggleImportant = importantID =>\n    this.setState(({ todos }) => ({\n      todos: todos.map(t => t.id === importantID ? { ...t, important: !t.important } : t)\n    }))\n\n  handleSearchChange = term => this.setState({ term })\n\n  handleFilterChange = filter => this.setState({ filter })\n\n  filterItems = (items, type) => {\n    if (type === 'active') return items.filter(item => !item.done)\n    if (type === 'done') return items.filter(item => item.done)\n    return items\n  }\n\n  render () {\n    const { todos, term, filter: filterType } = this.state\n    const doneCount = todos.filter(t => t.done).length\n    const todoCount = todos.length - doneCount\n    const visibleItems = this.filterItems(todos, filterType).filter(({ text }) => text.includes(term))\n    return (\n      <div className='app-container'>\n        <AppHeader todo={todoCount} done={doneCount} />\n\n        <div className='d-flex'>\n          <SearchBar onSearchChange={this.handleSearchChange} />\n\n          <ItemStatusFilter\n            filter={filterType}\n            onFilterChange={this.handleFilterChange}\n          />\n        </div>\n\n        <AddItemForm addItem={this.addItem} />\n\n        <TodoList\n          todos={visibleItems}\n          toggleDone={this.toggleDone}\n          toggleImportant={this.toggleImportant}\n          deleteItem={this.deleteItem}\n        />\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './components/app'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}